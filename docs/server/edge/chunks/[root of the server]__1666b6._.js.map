{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/api/me/tokens/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\n\nconst ME_API_BASE = process.env.ME_API_BASE || 'https://api-mainnet.magiceden.dev/v2';\nconst COLLECTION_ADDRESS = process.env.NEXT_PUBLIC_ME_COLLECTION || '0xa6bAbE18F2318D2880DD7dA3126C19536048F8B0';\n\nexport const runtime = 'edge';\nexport const revalidate = 60; // Cache for 60 seconds\n\nexport async function GET(request: NextRequest) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const limit = searchParams.get('limit') || '32';\n    const offset = searchParams.get('offset') || '0';\n    const random = searchParams.get('random') === 'true';\n\n    // For Apechain, we need to use the correct API endpoint\n    const apiUrl = `${ME_API_BASE}/apechain/collections/${COLLECTION_ADDRESS}/tokens?limit=${limit}&offset=${offset}`;\n    \n    const response = await fetch(apiUrl, {\n      headers: {\n        'Accept': 'application/json',\n      },\n      next: { revalidate: 60 },\n    });\n\n    if (!response.ok) {\n      console.error('Magic Eden API error:', response.statusText);\n      \n      // Return mock data as fallback\n      return NextResponse.json({\n        tokens: generateMockTokens(parseInt(limit)),\n        total: 1000,\n      });\n    }\n\n    const data = await response.json();\n    \n    // If random is requested, shuffle the tokens\n    let tokens = data.tokens || data;\n    if (random && Array.isArray(tokens)) {\n      tokens = tokens.sort(() => Math.random() - 0.5);\n    }\n\n    return NextResponse.json({\n      tokens,\n      total: data.total || tokens.length,\n    });\n\n  } catch (error) {\n    console.error('Error fetching tokens:', error);\n    \n    // Return mock data as fallback\n    const limit = parseInt(new URL(request.url).searchParams.get('limit') || '32');\n    return NextResponse.json({\n      tokens: generateMockTokens(limit),\n      total: 1000,\n    });\n  }\n}\n\nfunction generateMockTokens(count: number) {\n  const traits = [\n    { name: 'Fur', value: 'Golden', rarity: 10 },\n    { name: 'Fur', value: 'Silver', rarity: 25 },\n    { name: 'Fur', value: 'Blue', rarity: 50 },\n    { name: 'Eyes', value: 'Laser', rarity: 15 },\n    { name: 'Accessory', value: 'Crown', rarity: 5 },\n    { name: 'Accessory', value: 'Chain', rarity: 15 },\n    { name: 'Background', value: 'Space', rarity: 20 },\n  ];\n\n  return Array.from({ length: count }, (_, i) => ({\n    mint: `mock-token-${i + 1}`,\n    tokenId: `${i + 1}`,\n    name: `Ape On Ape #${i + 1}`,\n    image: '/AoA-placeholder-apecoinblue.jpg',\n    price: Math.random() * 10 + 0.1,\n    currency: 'APE',\n    rarity: Math.floor(Math.random() * 1000) + 1,\n    attributes: traits\n      .sort(() => Math.random() - 0.5)\n      .slice(0, Math.floor(Math.random() * 4) + 2),\n    owner: `0x${Math.random().toString(16).substr(2, 40)}`,\n  }));\n}\n\n"],"names":[],"mappings":";;;;;AAAA;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW,IAAI;AAC/C,MAAM,qBAAqB,kFAAyC;AAE7D,MAAM,UAAU;AAChB,MAAM,aAAa,IAAI,uBAAuB;AAE9C,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,QAAQ,aAAa,GAAG,CAAC,YAAY;QAC3C,MAAM,SAAS,aAAa,GAAG,CAAC,aAAa;QAC7C,MAAM,SAAS,aAAa,GAAG,CAAC,cAAc;QAE9C,wDAAwD;QACxD,MAAM,SAAS,GAAG,YAAY,sBAAsB,EAAE,mBAAmB,cAAc,EAAE,MAAM,QAAQ,EAAE,QAAQ;QAEjH,MAAM,WAAW,MAAM,MAAM,QAAQ;YACnC,SAAS;gBACP,UAAU;YACZ;YACA,MAAM;gBAAE,YAAY;YAAG;QACzB;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,QAAQ,KAAK,CAAC,yBAAyB,SAAS,UAAU;YAE1D,+BAA+B;YAC/B,OAAO,+LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,QAAQ,mBAAmB,SAAS;gBACpC,OAAO;YACT;QACF;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,6CAA6C;QAC7C,IAAI,SAAS,KAAK,MAAM,IAAI;QAC5B,IAAI,UAAU,MAAM,OAAO,CAAC,SAAS;YACnC,SAAS,OAAO,IAAI,CAAC,IAAM,KAAK,MAAM,KAAK;QAC7C;QAEA,OAAO,+LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB;YACA,OAAO,KAAK,KAAK,IAAI,OAAO,MAAM;QACpC;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QAExC,+BAA+B;QAC/B,MAAM,QAAQ,SAAS,IAAI,IAAI,QAAQ,GAAG,EAAE,YAAY,CAAC,GAAG,CAAC,YAAY;QACzE,OAAO,+LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,QAAQ,mBAAmB;YAC3B,OAAO;QACT;IACF;AACF;AAEA,SAAS,mBAAmB,KAAa;IACvC,MAAM,SAAS;QACb;YAAE,MAAM;YAAO,OAAO;YAAU,QAAQ;QAAG;QAC3C;YAAE,MAAM;YAAO,OAAO;YAAU,QAAQ;QAAG;QAC3C;YAAE,MAAM;YAAO,OAAO;YAAQ,QAAQ;QAAG;QACzC;YAAE,MAAM;YAAQ,OAAO;YAAS,QAAQ;QAAG;QAC3C;YAAE,MAAM;YAAa,OAAO;YAAS,QAAQ;QAAE;QAC/C;YAAE,MAAM;YAAa,OAAO;YAAS,QAAQ;QAAG;QAChD;YAAE,MAAM;YAAc,OAAO;YAAS,QAAQ;QAAG;KAClD;IAED,OAAO,MAAM,IAAI,CAAC;QAAE,QAAQ;IAAM,GAAG,CAAC,GAAG,IAAM,CAAC;YAC9C,MAAM,CAAC,WAAW,EAAE,IAAI,GAAG;YAC3B,SAAS,GAAG,IAAI,GAAG;YACnB,MAAM,CAAC,YAAY,EAAE,IAAI,GAAG;YAC5B,OAAO;YACP,OAAO,KAAK,MAAM,KAAK,KAAK;YAC5B,UAAU;YACV,QAAQ,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ;YAC3C,YAAY,OACT,IAAI,CAAC,IAAM,KAAK,MAAM,KAAK,KAC3B,KAAK,CAAC,GAAG,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,KAAK;YAC5C,OAAO,CAAC,EAAE,EAAE,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,GAAG,KAAK;QACxD,CAAC;AACH"}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}